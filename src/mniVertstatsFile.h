#ifndef __MNIVERTSTATSFILE__
#define __MNIVERTSTATSFILE__

#include <vector>
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

/*! A type to hold a vector of a vector */
typedef vector<float> vertexColumn;
typedef vector<vertexColumn> vertexMatrix;

/*! the type of file that is being read */
enum mniVertstatsFileType { OLDSTYLE, NEWSTYLE };


/*! A class to read vertex statistics files
 * 
 * A class designed to read and interact with vertex statistics files
 * as generated by the vertex based morphometry techniques. These
 * files contain the following elements: a header, containing the
 * formula used to generate the data, statistics performed on the
 * mean, etc., and a body containing the actual statistical elements
 * in a m*n matrix, where m is the number of vertices and n is the
 * number of statistical terms *(F stats, adjusted R square, etc.).
 */

class mniVertstatsFile {
private:
  string *mean;
  string *formula;
  vector <string> *matrix;
  vector <string> *dataheader;
  vertexMatrix *data;
  int numColumns;
  mniVertstatsFileType determineFileType(char *filename);
  void initialiseVariables();
  void loadOldStyleFile(char *filename);
  void loadNewStyleFile(char *filename);

public:
  mniVertstatsFile();
  mniVertstatsFile(char *filename);
  void loadFile(char *filename);
  vertexColumn getDataColumn(string rowName);
  vertexColumn getDataColumn(int index);
  vector<string> getDataHeader() { return *dataheader; }
  int getNumColumns() { return numColumns; }
  string getFormula() { return *formula; }
  string getMean() { return *mean; }
  /*! An exception class for retrieving a nonexistent row */
  class InvalidColumnError { };


};

#endif // __MNIVERTSTATSFILE__
